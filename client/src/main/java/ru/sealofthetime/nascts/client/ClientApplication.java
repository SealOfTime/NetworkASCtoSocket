/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ru.sealofthetime.nascts.client;

import ru.sealofthetime.nascts.shared.Response;

import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.AsynchronousSocketChannel;
import java.nio.channels.CompletionHandler;
import java.util.HashMap;
import java.util.Scanner;

public class ClientApplication {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        var port = sc.nextInt();
        try{
            var asc = AsynchronousSocketChannel.open();
            asc.connect(new InetSocketAddress("localhost", port), asc, new CompletionHandler<Void,AsynchronousSocketChannel>() {

                @Override
                public void completed(Void result, AsynchronousSocketChannel dest) {
                    ByteBuffer buf = ByteBuffer.allocate(32);
                    var att = new HashMap<String, Object>();
                    att.put("buffer", buf);
                    att.put("source", dest);
                    System.out.println("Connected");
                    dest.read(buf.clear(), att, new ClientReaderHandler());
                    System.out.println("Reading");
                }

                @Override
                public void failed(Throwable exc, AsynchronousSocketChannel attachment) {
                    exc.printStackTrace();
                }
            });
        }catch(Exception e){
            e.printStackTrace();
        }
        while(sc.hasNext()){if(sc.nextLine().equals("end"))break;}
    }

    static class ClientReaderHandler implements CompletionHandler<Integer, HashMap<String, Object>>{

		@Override
		public void completed(Integer result, HashMap<String, Object> att) {
            System.out.println("Read " + result + " bytes. ");
            var buf = ((ByteBuffer)att.get("buffer")).flip();
            var asc = (AsynchronousSocketChannel)att.get("source");
            System.out.println(buf.getInt());

            for(byte b : buf.array()) System.out.print(b + " ");
            System.out.println();

            asc.read(buf, att, this);
		}

		@Override
		public void failed(Throwable exc, HashMap<String, Object> attachment) {
			exc.printStackTrace();
        }
    }
}
